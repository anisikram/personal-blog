---
import type { MediaLightboxOptions } from '../scripts/mediaLightbox';
import mediaLightboxModuleUrl from '../scripts/mediaLightbox.js?url';

const {
  targetSelector,
  lightboxId = 'media-lightbox',
  contentId = `${lightboxId}-content`,
  closeLabel = 'Fermer l’aperçu',
}: {
  targetSelector: MediaLightboxOptions['targetSelector'];
  lightboxId?: MediaLightboxOptions['lightboxId'];
  contentId?: MediaLightboxOptions['contentId'];
  closeLabel?: string;
} = Astro.props;

const serializedOptions = JSON.stringify({
  targetSelector,
  lightboxId,
  contentId,
});

const moduleUrl = mediaLightboxModuleUrl;
---

<div
  id={lightboxId}
  class="fixed inset-0 z-50 hidden bg-base-300/90 backdrop-blur-sm p-4"
  role="dialog"
  aria-modal="true"
  aria-hidden="true"
>
  <div class="flex h-full items-center justify-center">
    <div class="relative w-full max-w-screen-2xl max-h-full">
      <button
        type="button"
        class="absolute right-2 top-2 inline-flex h-10 min-w-[2.5rem] items-center justify-center rounded-full bg-base-200 px-4 text-sm font-semibold text-base-content shadow focus:outline-none focus-visible:ring focus-visible:ring-primary"
        data-close-lightbox
        aria-label={closeLabel}
      >
        {closeLabel}
      </button>
      <div
        id={contentId}
        class="max-h-[calc(100vh-5rem)] overflow-auto rounded-lg bg-base-100 p-4 shadow-lg"
      />
    </div>
  </div>
</div>

<script type="module" define:vars={{ optionsJson: serializedOptions, moduleHref: moduleUrl }}>
  const options = JSON.parse(optionsJson);
  const importTarget = moduleHref;

  (async () => {
    try {
      const { initMediaLightbox } = await import(importTarget);
      const initialize = () => initMediaLightbox(options);

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initialize, { once: true });
      } else {
        initialize();
      }

      document.addEventListener('astro:page-load', initialize);
      document.addEventListener('astro:after-swap', initialize);
    } catch (error) {
      console.error('MediaLightbox: unable to initialize', error);
    }
  })();
</script>
